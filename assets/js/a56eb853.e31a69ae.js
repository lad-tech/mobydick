"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5506],{2139:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>j,frontMatter:()=>c,metadata:()=>p,toc:()=>a});var s=n(5893),o=n(1151),l=n(2004),i=n.n(l);const r=n.p+"assets/medias/Tooltip-fdcfc4968c8334ceb8e91fbe29954ad2.mov",c={},d=void 0,p={id:"components/core/popups/tooltip/TooltipBase",title:"TooltipBase",description:"Reusable Tooltip component",source:"@site/docs/components/core/popups/tooltip/TooltipBase.mdx",sourceDirName:"components/core/popups/tooltip",slug:"/components/core/popups/tooltip/TooltipBase",permalink:"/mobydick/docs/components/core/popups/tooltip/TooltipBase",draft:!1,unlisted:!1,editUrl:"https://github.com/lad-tech/mobydick/tree/main/docs/docs/components/core/popups/tooltip/TooltipBase.mdx",tags:[],version:"current",frontMatter:{},sidebar:"componentsSidebar",previous:{title:"Title",permalink:"/mobydick/docs/components/core/popups/tooltip/Title"},next:{title:"PopupBase",permalink:"/mobydick/docs/components/core/popups/PopupBase"}},h={},a=[{value:"Example",id:"example",level:2},{value:"<code>Props</code>",id:"props",level:2},{value:"<code>IPopup Props</code>",id:"ipopup-props",level:3},{value:'<div class="label required basic">Required</div><strong><code>onClose</code></strong>',id:"requiredonclose",level:3},{value:'<div class="label required basic">Required</div><strong><code>position</code></strong>',id:"requiredposition",level:3},{value:'<div class="label required basic">Required</div><strong><code>placement</code></strong>',id:"requiredplacement",level:3},{value:'<div class="label required basic">Required</div><strong><code>refCurrent</code></strong>',id:"requiredrefcurrent",level:3},{value:"<code>overlayStyle</code>",id:"overlaystyle",level:3},{value:"<code>containerStyle</code>",id:"containerstyle",level:3},{value:"<code>timeShow</code>",id:"timeshow",level:3},{value:"<code>Components</code>",id:"components",level:2},{value:"<code>Title</code>",id:"title",level:3},{value:"<code>DescriptionText</code>",id:"descriptiontext",level:3},{value:"<code>Arrow</code>",id:"arrow",level:3},{value:"<code>LeftButton</code>",id:"leftbutton",level:3}];function x(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i(),{playing:!0,controls:!0,url:r}),"\n",(0,s.jsx)(t.p,{children:"Reusable Tooltip component"}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import {useRef} from 'react';\n\nimport {\n  Button,\n  createStyles,\n  IPlacement,\n  IPosition,\n  TooltipBase,\n  Typography,\n  usePopups,\n  useStyles,\n  View,\n} from '@lad-tech/mobydick-core';\n\nexport const TooltipWidget = () => {\n  const ref = useRef(null);\n  const [styles] = useStyles(styleFn);\n  const {openPopup} = usePopups();\n\n  return (\n    <View style={styles.container}>\n      <Typography font={'Regular-Primary-H5'}>Tooltip</Typography>\n      <View ref={ref} style={styles.ref}>\n        <Typography>Ref component</Typography>\n      </View>\n      <Button\n        text={'Tooltip'}\n        onPress={() =>\n          openPopup({\n            Content: props => (\n              <TooltipBase\n                position={IPosition.bottom}\n                placement={IPlacement.center}\n                refCurrent={ref}\n                {...props}>\n                <TooltipBase.Title title={'Tooltip title'} />\n                <TooltipBase.DescriptionText\n                  descriptionText={'Tooltip descriptionText'}\n                />\n                <TooltipBase.Arrow\n                  position={IPosition.bottom}\n                  placement={IPlacement.center}\n                />\n              </TooltipBase>\n            ),\n          })\n        }\n      />\n    </View>\n  );\n};\n\nconst styleFn = createStyles(({spaces, colors}) => ({\n  container: {gap: spaces.Space8},\n  ref: {\n    alignItems: 'center',\n    padding: spaces.Space8,\n    backgroundColor: colors.BgAccent,\n  },\n}));\n"})}),"\n",(0,s.jsx)(t.h2,{id:"props",children:(0,s.jsx)(t.code,{children:"Props"})}),"\n",(0,s.jsx)(t.h3,{id:"ipopup-props",children:(0,s.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/popups/types.ts#L11",children:(0,s.jsx)(t.code,{children:"IPopup Props"})})}),"\n",(0,s.jsxs)(t.p,{children:["Inherits ",(0,s.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/popups/types.ts#L11",children:"IPopup Props"})," except 'Content'"]}),"\n",(0,s.jsxs)(t.h3,{id:"requiredonclose",children:[(0,s.jsx)("div",{class:"label required basic",children:"Required"}),(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"onClose"})})]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"() => void"})})})]}),"\n",(0,s.jsx)(t.p,{children:"Function for close tooltip"}),"\n",(0,s.jsxs)(t.h3,{id:"requiredposition",children:[(0,s.jsx)("div",{class:"label required basic",children:"Required"}),(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"position"})})]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/popups/types.ts#L17",children:"position"})})})})]}),"\n",(0,s.jsx)(t.p,{children:"Position for tooltip"}),"\n",(0,s.jsxs)(t.h3,{id:"requiredplacement",children:[(0,s.jsx)("div",{class:"label required basic",children:"Required"}),(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"placement"})})]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/popups/components/TooltipBase/types.ts#L7",children:"placement"})})})})]}),"\n",(0,s.jsx)(t.p,{children:"Placement for tooltip"}),"\n",(0,s.jsxs)(t.h3,{id:"requiredrefcurrent",children:[(0,s.jsx)("div",{class:"label required basic",children:"Required"}),(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"refCurrent"})})]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"RefObjectLike"})})})]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://react.dev/reference/react/useRef",children:"Ref"})," for ",(0,s.jsx)(t.a,{href:"https://reactnative.dev/docs/touchableopacity",children:"TouchableOpacity"})]}),"\n",(0,s.jsx)(t.h3,{id:"overlaystyle",children:(0,s.jsx)(t.code,{children:"overlayStyle"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props#props",children:"ViewStyle"})})})})]}),"\n",(0,s.jsx)(t.p,{children:"Custom styles for PopupBase"}),"\n",(0,s.jsx)(t.h3,{id:"containerstyle",children:(0,s.jsx)(t.code,{children:"containerStyle"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props#props",children:"ViewStyle"})})})})]}),"\n",(0,s.jsx)(t.p,{children:"Custom styles for container tooltip"}),"\n",(0,s.jsx)(t.h3,{id:"timeshow",children:(0,s.jsx)(t.code,{children:"timeShow"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"number"})})})]}),"\n",(0,s.jsx)(t.p,{children:"Timer for show tooltip"}),"\n",(0,s.jsx)(t.h2,{id:"components",children:(0,s.jsx)(t.code,{children:"Components"})}),"\n",(0,s.jsx)(t.h3,{id:"title",children:(0,s.jsx)(t.code,{children:"Title"})}),"\n",(0,s.jsxs)(t.p,{children:["See ",(0,s.jsx)(t.a,{href:"./Title",children:"Title"})]}),"\n",(0,s.jsx)(t.h3,{id:"descriptiontext",children:(0,s.jsx)(t.code,{children:"DescriptionText"})}),"\n",(0,s.jsxs)(t.p,{children:["See ",(0,s.jsx)(t.a,{href:"./DescriptionText",children:"DescriptionText"})]}),"\n",(0,s.jsx)(t.h3,{id:"arrow",children:(0,s.jsx)(t.code,{children:"Arrow"})}),"\n",(0,s.jsxs)(t.p,{children:["See ",(0,s.jsx)(t.a,{href:"./Arrow",children:"Arrow"})]}),"\n",(0,s.jsx)(t.h3,{id:"leftbutton",children:(0,s.jsx)(t.code,{children:"LeftButton"})}),"\n",(0,s.jsxs)(t.p,{children:["See ",(0,s.jsx)(t.a,{href:"./LeftButton",children:"LeftButton"})]})]})}function j(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}}}]);