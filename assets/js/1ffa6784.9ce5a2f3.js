"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6266],{7637:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>x});var r=t(5893),d=t(1151);const a=t.p+"assets/medias/LineChart-9602ccda31c4d6cc39dbee5514751a43.mov";var i=t(2004),s=t.n(i);const c={},o=void 0,l={id:"components/chart/LineChart",title:"LineChart",description:"Example",source:"@site/docs/components/chart/LineChart.mdx",sourceDirName:"components/chart",slug:"/components/chart/LineChart",permalink:"/mobydick/docs/components/chart/LineChart",draft:!1,unlisted:!1,editUrl:"https://github.com/lad-tech/mobydick/tree/main/docs/docs/components/chart/LineChart.mdx",tags:[],version:"current",frontMatter:{},sidebar:"componentsSidebar",previous:{title:"Chart",permalink:"/mobydick/docs/category/chart-1"},next:{title:"Calendar",permalink:"/mobydick/docs/category/calendar-1"}},h={},x=[{value:"Example",id:"example",level:2},{value:"LineChart",id:"linechart",level:3},{value:"RenderSectionItem",id:"rendersectionitem",level:3},{value:"RenderHeader",id:"renderheader",level:3},{value:"Props",id:"props",level:2},{value:'<div class="label required basic">Required</div><strong><code>dataset</code></strong>',id:"requireddataset",level:3},{value:"<code>title</code>",id:"title",level:3},{value:"<code>renderSectionItem</code>",id:"rendersectionitem-1",level:3},{value:"<code>sectionContainerStyles</code>",id:"sectioncontainerstyles",level:3},{value:"<code>formatterX</code>",id:"formatterx",level:3},{value:"<code>formatterY</code>",id:"formattery",level:3},{value:"<code>hideDataPoints</code>",id:"hidedatapoints",level:3}];function m(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s(),{playing:!0,controls:!0,url:a,loop:!0}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.h3,{id:"linechart",children:"LineChart"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {\n  IRenderHeader,\n  IRenderSectionItem,\n  LineChart,\n  IDataset,\n  ICoordinates\n} from '@lad-tech/mobydick-chart';\nimport RenderSectionItem from '...';\nimport RenderHeader from '...';\n\nconst random = Math.random() * 100;\n\n const mockChart = (n: number) =>\n  new Array(n).fill(0).map<ICoordinates>((_value, index) => {\n    return {\n      x: random * index,\n      y: 10 + Math.random() * index,\n    };\n  });\n\n const mockChartDataset: IDataset = {\n  'period 1': [\n    {\n      coordinates: mockChart(20),\n      name: '1 line',\n      colors:  [\n        '#ff0000',\n        '#f4e91d',\n      ]\n    },\n    {\n      coordinates: mockChart(10),\n      name: '2 line',\n    },\n    {\n      coordinates: mockChart(5),\n      name: '3 line',\n      colors:  [\n        '#33135b',\n        '#9BE1DA',\n        '#c5cd56',\n        '#3b3f8e',\n      ]\n    },\n  ],\n  period: [\n    {\n      coordinates: mockChart(20),\n      name: '1 line',\n      colors:  [\n        '#ba80ff',\n        '#9BE1DA',\n        '#56CDCB',\n        '#3B8B8E',\n      ]\n    },\n    {\n      coordinates: mockChart(10),\n      name: '2 line',\n      colors:  [\n        '#E0F5E9',\n        '#e1db9b',\n        '#abcd56',\n        '#768e3b',\n        '#1cef38',\n        '#1df488',\n        '#1de7f9',\n        '#5787ff',\n      ],\n    },\n    {\n      coordinates: mockChart(5),\n      name: '3 line',\n      colors:  [\n        '#ee80ff',\n        '#e19b9b',\n        '#5ecd56',\n        '#833b8e',\n      ]\n    },\n  ],\n};\n\n\nconst renderSectionItem: IRenderSectionItem = (\n  {period, transition, state},\n  index,\n) => (\n  <RenderSectionItem\n    period={period}\n    state={state}\n    transition={transition}\n    index={index}\n  />\n);\n\nconst renderHeader: IRenderHeader = headerData => (\n  <RenderHeader header={headerData} />\n);\n\nconst LineChartScreen = () => {\n\n  return (\n    <LineChart\n      renderHeader={renderHeader}\n      dataset={mockChartDataset}\n      renderSectionItem={renderSectionItem}\n    />\n);\n};\n\nexport default LineChartScreen;\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rendersectionitem",children:"RenderSectionItem"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import Animated, {\n  interpolateColor,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\nimport {\n  createStyles,\n  Typography,\n  useStyles,\n} from '@lad-tech/mobydick-core';\n\nimport {\n  IChartTransition,\n  ISharedChartState,\n} from '@lad-tech/mobydick-chart';\n\ninterface IProps {\n  period: string;\n  state: ISharedChartState;\n  transition: IChartTransition;\n  index: number;\n}\n\nconst RenderSectionItem = ({period, state, transition, index}: IProps) => {\n  const [styles, {colors}] = useStyles(createStyleFn);\n  const animationStyles = useAnimatedStyle(() => {\n    const {current, next} = state.value;\n\n    if (index !== current && index !== next) {\n      return {backgroundColor: colors.BgAccent};\n    }\n\n    if (index === current && index === next) {\n      return {backgroundColor: colors.BgAccentHard};\n    }\n\n    return {\n      backgroundColor: interpolateColor(\n        transition.value,\n        index === next ? [0, 1] : [1, 0],\n        [colors.BgAccent, colors.BgAccentHard],\n      ),\n    };\n  });\n\n  return (\n    <Animated.View style={[styles.container, animationStyles]}>\n      <Typography style={styles.text}>{period}</Typography>\n    </Animated.View>\n  );\n};\n\nconst createStyleFn = createStyles(({spaces}) => ({\n  container: {\n    flexGrow: 1,\n    padding: spaces.Space8,\n    borderRadius: spaces.Space16,\n    margin: spaces.Space4,\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n}));\n\nexport default RenderSectionItem;\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"renderheader",children:"RenderHeader"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import Animated, {useAnimatedProps} from 'react-native-reanimated';\nimport {TextInput} from 'react-native';\n\nimport {IRenderHeader} from '@lad-tech/mobydick-chart';\nimport {Typography, View} from '@lad-tech/mobydick-core';\n\ninterface IRenderHeaderProps {\n  header: Parameters<IRenderHeader>[number];\n}\n\nexport const AnimatedText = Animated.createAnimatedComponent(TextInput);\nAnimated.addWhitelistedNativeProps({text: true});\n\nconst RenderHeader = ({header}: IRenderHeaderProps) => {\n  const animatedPropsPeriod = useAnimatedProps(() => {\n    return {\n      text: header.selectedPeriodName.value,\n      defaultValue: header.selectedPeriodName.value,\n    };\n  });\n\n  const animatedPropsRecord = useAnimatedProps(() => {\n    const lastRecord = header.selectedValues.value[0]?.y.toString() ?? '';\n\n    return {\n      text: lastRecord,\n      defaultValue: lastRecord,\n    };\n  });\n\n  return (\n    <View>\n      <AnimatedText\n        animatedProps={animatedPropsPeriod}\n        editable={false}\n        underlineColorAndroid=\"transparent\"\n      />\n      <Typography>Last record</Typography>\n      <AnimatedText\n        animatedProps={animatedPropsRecord}\n        editable={false}\n        underlineColorAndroid=\"transparent\"\n      />\n    </View>\n  );\n};\n\nexport default RenderHeader;\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(n.h3,{id:"requireddataset",children:[(0,r.jsx)("div",{class:"label required basic",children:"Required"}),(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"dataset"})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/chart/src/types.tsx#L15",children:"IDataset"})})})})]}),"\n",(0,r.jsx)(n.p,{children:"All data for chart"}),"\n",(0,r.jsx)(n.h3,{id:"title",children:(0,r.jsx)(n.code,{children:"title"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"string"})})})]}),"\n",(0,r.jsx)(n.p,{children:"Title for chart"}),"\n",(0,r.jsx)(n.h3,{id:"rendersectionitem-1",children:(0,r.jsx)(n.code,{children:"renderSectionItem"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/chart/src/types.tsx#L27",children:"IRenderSectionItem"})})})})]}),"\n",(0,r.jsx)(n.p,{children:"Render for sections components"}),"\n",(0,r.jsx)(n.h3,{id:"sectioncontainerstyles",children:(0,r.jsx)(n.code,{children:"sectionContainerStyles"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.a,{href:"https://reactnative.dev/docs/view-style-props#props",children:"ViewStyle"})})})})]}),"\n",(0,r.jsx)(n.p,{children:"Custom section container styles"}),"\n",(0,r.jsx)(n.h3,{id:"formatterx",children:(0,r.jsx)(n.code,{children:"formatterX"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/chart/src/types.tsx#L19",children:"IFormatter"})})})})]}),"\n",(0,r.jsx)(n.p,{children:"Custom format for x"}),"\n",(0,r.jsx)(n.h3,{id:"formattery",children:(0,r.jsx)(n.code,{children:"formatterY"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,r.jsx)(n.tbody,{children:(0,r.jsx)(n.tr,{children:(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/chart/src/types.tsx#L19",children:"IFormatter"})})})})]}),"\n",(0,r.jsx)(n.p,{children:"Custom format for y"}),"\n",(0,r.jsx)(n.h3,{id:"hidedatapoints",children:(0,r.jsx)(n.code,{children:"hideDataPoints"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"TYPE"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"DEFAULT"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"boolean"}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:"false"})]})})]}),"\n",(0,r.jsx)(n.p,{children:"Hide data points on lineChart"})]})}function p(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);