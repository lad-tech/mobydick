"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[957],{2532:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>x,frontMatter:()=>r,metadata:()=>c,toc:()=>h});var l=n(5893),s=n(1151);const i=n.p+"assets/images/InputField-c81b03843fe879c06ea4ca8fde62e9b9.png",r={},d=void 0,c={id:"components/core/inputs/InputField",title:"InputField",description:"Reusable Input field for any form",source:"@site/docs/components/core/inputs/InputField.mdx",sourceDirName:"components/core/inputs",slug:"/components/core/inputs/InputField",permalink:"/mobydick/docs/components/core/inputs/InputField",draft:!1,unlisted:!1,editUrl:"https://github.com/lad-tech/mobydick/tree/main/docs/docs/components/core/inputs/InputField.mdx",tags:[],version:"current",frontMatter:{},sidebar:"componentsSidebar",previous:{title:"DropDown",permalink:"/mobydick/docs/components/core/inputs/DropDown"},next:{title:"Search",permalink:"/mobydick/docs/components/core/inputs/Search"}},o={},h=[{value:"Example",id:"example",level:2},{value:"<code>Props</code>",id:"props",level:2},{value:"<code>TextInput Props</code>",id:"textinput-props",level:3},{value:"<code>type</code>",id:"type",level:3},{value:"<code>title</code>",id:"title",level:3},{value:"<code>titleProps</code>",id:"titleprops",level:3},{value:"<code>required</code>",id:"required",level:3},{value:"<code>subtitle</code>",id:"subtitle",level:3},{value:"<code>subtitleIcon</code>",id:"subtitleicon",level:3},{value:"<code>subtitleProps</code>",id:"subtitleprops",level:3},{value:"<code>containerStyle</code>",id:"containerstyle",level:3},{value:"<code>textInputContainerStyle</code>",id:"textinputcontainerstyle",level:3},{value:"<code>rightIcon</code>",id:"righticon",level:3},{value:"<code>disabled</code>",id:"disabled",level:3}];function p(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.a)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.p,{children:"Reusable Input field for any form"}),"\n","\n","\n",(0,l.jsx)("img",{src:i,width:"50%"}),"\n",(0,l.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-tsx",children:"import {useState} from 'react';\n\nimport {\n  createStyles,\n  IInputsTypes,\n  InputField,\n  Pressable,\n  SimpleIcon,\n  useStyles,\n  View,\n} from '@lad-tech/mobydick-core';\n\nconst InputList = () => {\n  const [styles] = useStyles(styleSource);\n  const [about, setAbout] = useState('');\n  const [isSecureTextEntry, setSecureTextEntry] = useState(false);\n\n  return (\n    <View style={styles.containerStyle}>\n      <InputField\n        type={IInputsTypes.default}\n        title={'Login'}\n        placeholder={'login'}\n        required={true}\n      />\n\n      <InputField\n        type={IInputsTypes.valid}\n        title={'Password'}\n        placeholder={'password'}\n        rightIcon={\n          <Pressable onPress={() => setSecureTextEntry(!isSecureTextEntry)}>\n            <SimpleIcon name={isSecureTextEntry ? 'icon-show' : 'icon-hide'} />\n          </Pressable>\n        }\n        secureTextEntry={isSecureTextEntry}\n        required={true}\n      />\n\n      <InputField\n        type={IInputsTypes.wrong}\n        title={'Title'}\n        subtitle={'Error text'}\n      />\n\n      <InputField\n        type={IInputsTypes.disabled}\n        title={'Disabled field'}\n        disabled={true}\n        subtitle={'Subtitle'}\n      />\n\n      <InputField\n        type={IInputsTypes.default}\n        title={'About:'}\n        placeholder={'Write something'}\n        multiline={true}\n        value={about}\n        onChangeText={setAbout}\n      />\n    </View>\n  );\n};\n\nconst styleSource = createStyles(({spaces}) => ({\n  containerStyle: {\n    gap: spaces.Space12,\n  },\n}));\n\nexport default InputList;\n\n"})}),"\n",(0,l.jsx)(t.h2,{id:"props",children:(0,l.jsx)(t.code,{children:"Props"})}),"\n",(0,l.jsx)(t.h3,{id:"textinput-props",children:(0,l.jsx)(t.a,{href:"https://reactnative.dev/docs/textinput#props",children:(0,l.jsx)(t.code,{children:"TextInput Props"})})}),"\n",(0,l.jsxs)(t.p,{children:["Inherits ",(0,l.jsx)(t.a,{href:"https://reactnative.dev/docs/textinput#props",children:"TextInput Props"}),"."]}),"\n",(0,l.jsx)(t.h3,{id:"type",children:(0,l.jsx)(t.code,{children:"type"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/inputs/components/types.ts",children:"IInputsTypes"})})})})]}),"\n",(0,l.jsx)(t.p,{children:"Style preset for InputFiled"}),"\n",(0,l.jsx)(t.h3,{id:"title",children:(0,l.jsx)(t.code,{children:"title"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"string"})})})]}),"\n",(0,l.jsx)(t.p,{children:"Title for Input"}),"\n",(0,l.jsx)(t.h3,{id:"titleprops",children:(0,l.jsx)(t.code,{children:"titleProps"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/typography/types.ts#L7",children:"IStyledTextProps"})})})})]}),"\n",(0,l.jsx)(t.p,{children:"Title customization"}),"\n",(0,l.jsx)(t.h3,{id:"required",children:(0,l.jsx)(t.code,{children:"required"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"boolean"})})})]}),"\n",(0,l.jsx)(t.p,{children:"Mark field as required"}),"\n",(0,l.jsx)(t.h3,{id:"subtitle",children:(0,l.jsx)(t.code,{children:"subtitle"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"string"})})})]}),"\n",(0,l.jsx)(t.p,{children:"Subtitle for Input"}),"\n",(0,l.jsx)(t.h3,{id:"subtitleicon",children:(0,l.jsx)(t.code,{children:"subtitleIcon"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/styles/icons/font/unicodesMap.json",children:"SimpleIconName"})})})})]}),"\n",(0,l.jsx)(t.p,{children:"SubtitleIcon for Input"}),"\n",(0,l.jsx)(t.h3,{id:"subtitleprops",children:(0,l.jsx)(t.code,{children:"subtitleProps"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/typography/types.ts#L7",children:"IStyledTextProps"})})})})]}),"\n",(0,l.jsx)(t.p,{children:"Title customization"}),"\n",(0,l.jsx)(t.h3,{id:"containerstyle",children:(0,l.jsx)(t.code,{children:"containerStyle"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props#props",children:"ViewStyle"})})})})]}),"\n",(0,l.jsx)(t.p,{children:"Custom styles for container"}),"\n",(0,l.jsx)(t.h3,{id:"textinputcontainerstyle",children:(0,l.jsx)(t.code,{children:"textInputContainerStyle"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:(0,l.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props#props",children:"ViewStyle"})})})})]}),"\n",(0,l.jsx)(t.p,{children:"Custom styles for textInputContainer"}),"\n",(0,l.jsx)(t.h3,{id:"righticon",children:(0,l.jsx)(t.code,{children:"rightIcon"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"ReactElement"})})})]}),"\n",(0,l.jsx)(t.p,{children:"any react component placed right"}),"\n",(0,l.jsx)(t.h3,{id:"disabled",children:(0,l.jsx)(t.code,{children:"disabled"})}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.th,{style:{textAlign:"left"},children:"Type"})})}),(0,l.jsx)(t.tbody,{children:(0,l.jsx)(t.tr,{children:(0,l.jsx)(t.td,{style:{textAlign:"left"},children:"boolean"})})})]}),"\n",(0,l.jsx)(t.p,{children:"disable input"})]})}function x(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>d,a:()=>r});var l=n(7294);const s={},i=l.createContext(s);function r(e){const t=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),l.createElement(i.Provider,{value:t},e.children)}}}]);