"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6693],{5166:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>i,toc:()=>o});var s=r(5893),n=r(1151);const l=r.p+"assets/images/AvatarLight-bc3b79a36cb5632c8f1ce1ede6a37cff.png",d={},c=void 0,i={id:"core/others/Avatar",title:"Avatar",description:"Reusable Swipe component",source:"@site/docs/core/others/Avatar.mdx",sourceDirName:"core/others",slug:"/core/others/Avatar",permalink:"/mobydick/docs/core/others/Avatar",draft:!1,unlisted:!1,editUrl:"https://github.com/lad-tech/mobydick/tree/main/docs/docs/core/others/Avatar.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Others",permalink:"/mobydick/docs/category/others"},next:{title:"Badge",permalink:"/mobydick/docs/core/others/Badge"}},a={},o=[{value:"Example",id:"example",level:2},{value:"<code>Props</code>",id:"props",level:2},{value:'<div class="label required basic">Required</div><strong><code>user</code></strong>',id:"requireduser",level:3},{value:"<code>type</code>",id:"type",level:3},{value:"<code>size</code>",id:"size",level:3},{value:"<code>backgroundColor</code>",id:"backgroundcolor",level:3},{value:"<code>style</code>",id:"style",level:3},{value:"<code>badge</code>",id:"badge",level:3},{value:"<code>backgroundColorBadge</code>",id:"backgroundcolorbadge",level:3},{value:"<code>disabled</code>",id:"disabled",level:3},{value:"<code>border</code>",id:"border",level:3},{value:"<code>headers</code>",id:"headers",level:3}];function h(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("img",{src:l,width:"50%"}),"\n",(0,s.jsx)(t.p,{children:"Reusable Swipe component"}),"\n",(0,s.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import {\n  Avatar,\n  AvatarGroup,\n  createStyles,\n  IAvatarSize,\n  IAvatarTypes,\n  IBadgeTypes,\n  ICounterTypes,\n  IIndicatorTypes,\n  IStatusTypes,\n  Typography,\n  useStyles,\n  View,\n} from '@lad-tech/mobydick-core';\n\nexport const AvatarWidget = () => {\n  const [styles] = useStyles(stylesFn);\n\n  return (\n    <View>\n      <View style={styles.container}>\n        <Typography>{'Content'}</Typography>\n        <View style={styles.row}>\n          <Avatar user={userTest} />\n          <Avatar user={userTest} type={IAvatarTypes.icon} />\n        </View>\n        <Typography>{'State'}</Typography>\n        <View style={styles.row}>\n          <Avatar\n            user={userTest}\n            type={IAvatarTypes.icon}\n            backgroundColor={'green'}\n            disabled={true}\n          />\n        </View>\n        <Typography>{'Size'}</Typography>\n        <View style={styles.row}>\n          <Avatar user={userTest} size={IAvatarSize.S} />\n        </View>\n        <Typography>{'Badge'}</Typography>\n        <View style={styles.row}>\n          <Avatar\n            user={userWithLogoTest}\n            badge={{type: IBadgeTypes.status, value: IStatusTypes.star}}\n          />\n          <Avatar\n            user={userWithLogoTest}\n            badge={{\n              type: IBadgeTypes.indicator,\n              value: IIndicatorTypes.secondary,\n            }}\n          />\n          <Avatar\n            user={userWithLogoTest}\n            badge={{\n              type: IBadgeTypes.counter,\n              value: ICounterTypes.attention,\n              count: 99,\n            }}\n          />\n        </View>\n        <Typography>{'Group'}</Typography>\n        <View style={styles.row}>\n          <AvatarGroup\n            groups={smallGroupDateTest.concat(Array(101).fill(defaultUserTest))}\n            backgroundColor={'#ff0000'}\n            type={IAvatarTypes.text}\n            groupCount={50}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst stylesFn = createStyles(({spaces}) => ({\n  container: {\n    gap: spaces.Space16,\n    alignItems: 'center',\n  },\n  row: {\n    flexDirection: 'row',\n    gap: spaces.Space16,\n  },\n}));\n\n"})}),"\n",(0,s.jsx)(t.h2,{id:"props",children:(0,s.jsx)(t.code,{children:"Props"})}),"\n",(0,s.jsxs)(t.h3,{id:"requireduser",children:[(0,s.jsx)("div",{class:"label required basic",children:"Required"}),(0,s.jsx)(t.strong,{children:(0,s.jsx)(t.code,{children:"user"})})]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/other/components/Avatar/types.ts#L5",children:"IUser"})})})})]}),"\n",(0,s.jsx)(t.h3,{id:"type",children:(0,s.jsx)(t.code,{children:"type"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"DEFAULT"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/other/components/Avatar/types.ts#L19",children:"IAvatarTypes"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"IAvatarTypes.text"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"Predefined type for avatar"}),"\n",(0,s.jsx)(t.h3,{id:"size",children:(0,s.jsx)(t.code,{children:"size"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"DEFAULT"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/other/components/Avatar/types.ts#L12",children:"IAvatarSize"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"IAvatarSize.M"})]})})]}),"\n",(0,s.jsx)(t.p,{children:"Predefined size for avatar"}),"\n",(0,s.jsx)(t.h3,{id:"backgroundcolor",children:(0,s.jsx)(t.code,{children:"backgroundColor"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"string"})})})]}),"\n",(0,s.jsx)(t.p,{children:"Background color for avatar"}),"\n",(0,s.jsx)(t.h3,{id:"style",children:(0,s.jsx)(t.code,{children:"style"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props#props",children:"ViewStyle"})})})})]}),"\n",(0,s.jsx)(t.p,{children:"Custom styles for avatar container"}),"\n",(0,s.jsx)(t.h3,{id:"badge",children:(0,s.jsx)(t.code,{children:"badge"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/other/components/Avatar/types.ts#L34",children:"IBadge"})})})})]}),"\n",(0,s.jsx)(t.p,{children:"Several badge options"}),"\n",(0,s.jsx)(t.h3,{id:"backgroundcolorbadge",children:(0,s.jsx)(t.code,{children:"backgroundColorBadge"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"string"})})})]}),"\n",(0,s.jsx)(t.p,{children:"Background color for badge"}),"\n",(0,s.jsx)(t.h3,{id:"disabled",children:(0,s.jsx)(t.code,{children:"disabled"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"DEFAULT"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"boolean"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"false"})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"border",children:(0,s.jsx)(t.code,{children:"border"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"DEFAULT"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"boolean"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"false"})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"headers",children:(0,s.jsx)(t.code,{children:"headers"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,s.jsx)(t.tbody,{children:(0,s.jsx)(t.tr,{children:(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/other/components/Avatar/types.ts#L58",children:"headers"})})})})]})]})}function x(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>c,a:()=>d});var s=r(7294);const n={},l=s.createContext(n);function d(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);