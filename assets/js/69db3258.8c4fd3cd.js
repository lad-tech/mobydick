"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6922],{5692:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=o(5893),r=o(1151),s=o(2182);const i={},l=void 0,c={id:"core/popups/tooltip/Arrow",title:"Arrow",description:"Reusable Arrow component for Tooltip",source:"@site/docs/core/popups/tooltip/Arrow.mdx",sourceDirName:"core/popups/tooltip",slug:"/core/popups/tooltip/Arrow",permalink:"/mobydick/docs/core/popups/tooltip/Arrow",draft:!1,unlisted:!1,editUrl:"https://github.com/lad-tech/mobydick/tree/main/docs/docs/core/popups/tooltip/Arrow.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tooltip",permalink:"/mobydick/docs/category/tooltip"},next:{title:"DescriptionText",permalink:"/mobydick/docs/core/popups/tooltip/DescriptionText"}},p={},d=[{value:"Example",id:"example",level:2},{value:"<code>Props</code>",id:"props",level:2},{value:'<div class="label required basic">Required</div><strong><code>position</code></strong>',id:"requiredposition",level:3},{value:'<div class="label required basic">Required</div><strong><code>placement</code></strong>',id:"requiredplacement",level:3},{value:"<code>arrowViewStyles</code>",id:"arrowviewstyles",level:3}];function a(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)("img",{src:s.Z,width:"50%"}),"\n",(0,n.jsx)(t.p,{children:"Reusable Arrow component for Tooltip"}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-tsx",children:"import {useRef} from 'react';\n\nimport {\n  Button,\n  createStyles,\n  IPlacement,\n  IPosition,\n  TooltipBase,\n  Typography,\n  usePopups,\n  useStyles,\n  View,\n} from '@lad-tech/mobydick-core';\n\nexport const TooltipWidget = () => {\n  const ref = useRef(null);\n  const [styles] = useStyles(styleFn);\n  const {openPopup} = usePopups();\n\n  return (\n    <View style={styles.container}>\n      <Typography font={'Regular-Primary-H5'}>Tooltip</Typography>\n      <View ref={ref} style={styles.ref}>\n        <Typography>Ref component</Typography>\n      </View>\n      <Button\n        text={'Tooltip'}\n        onPress={() =>\n          openPopup({\n            Content: props => (\n              <TooltipBase\n                position={IPosition.bottom}\n                placement={IPlacement.center}\n                refCurrent={ref}\n                {...props}>\n                <TooltipBase.Title title={'Tooltip title'} />\n                <TooltipBase.Arrow\n                  position={IPosition.bottom}\n                  placement={IPlacement.center}\n                />\n              </TooltipBase>\n            ),\n          })\n        }\n      />\n    </View>\n  );\n};\n\nconst styleFn = createStyles(({spaces, colors}) => ({\n  container: {gap: spaces.Space8},\n  ref: {\n    alignItems: 'center',\n    padding: spaces.Space8,\n    backgroundColor: colors.BgAccent,\n  },\n}));\n"})}),"\n",(0,n.jsx)(t.h2,{id:"props",children:(0,n.jsx)(t.code,{children:"Props"})}),"\n",(0,n.jsxs)(t.h3,{id:"requiredposition",children:[(0,n.jsx)("div",{class:"label required basic",children:"Required"}),(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"position"})})]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,n.jsx)(t.tbody,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/popups/types.ts#L17",children:"position"})})})})]}),"\n",(0,n.jsx)(t.p,{children:"Position for arrow"}),"\n",(0,n.jsxs)(t.h3,{id:"requiredplacement",children:[(0,n.jsx)("div",{class:"label required basic",children:"Required"}),(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"placement"})})]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,n.jsx)(t.tbody,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://github.com/lad-tech/mobydick/blob/main/packages/core/src/popups/components/TooltipBase/types.ts#L7",children:"placement"})})})})]}),"\n",(0,n.jsx)(t.p,{children:"Placement for arrow"}),"\n",(0,n.jsx)(t.h3,{id:"arrowviewstyles",children:(0,n.jsx)(t.code,{children:"arrowViewStyles"})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"TYPE"})})}),(0,n.jsx)(t.tbody,{children:(0,n.jsx)(t.tr,{children:(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.a,{href:"https://reactnative.dev/docs/view-style-props#props",children:"ViewStyle"})})})})]}),"\n",(0,n.jsx)(t.p,{children:"Custom styles for container"})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},2182:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/Tooltip-035d34ef910cd6a8e53c2e136a44281f.png"},1151:(e,t,o)=>{o.d(t,{Z:()=>l,a:()=>i});var n=o(7294);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);