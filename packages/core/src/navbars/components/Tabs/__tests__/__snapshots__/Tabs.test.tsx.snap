// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tabs render correctly 1`] = `
<View
  style={
    {
      "flexDirection": "row",
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      [
        {
          "alignItems": "center",
          "paddingHorizontal": 20,
          "paddingVertical": 8,
        },
        undefined,
      ]
    }
    data={
      [
        {
          "label": "1",
          "value": 1,
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={[]}
    style={
      [
        {
          "maxWidth": "100%",
        },
        undefined,
      ]
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityLabel="tab"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#D0D6E0",
              "borderRadius": 8,
              "marginRight": 8,
              "opacity": 1,
              "paddingHorizontal": 12,
              "paddingVertical": 6,
            }
          }
        >
          <Text
            allowFontScaling={true}
            style={
              [
                {
                  "color": "#5E6678",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 12,
                  "lineHeight": 16,
                  "minHeight": 16,
                },
                undefined,
              ]
            }
          >
            1
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Tabs render correctly with props 1`] = `
<View
  style={
    {
      "flexDirection": "row",
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      [
        {
          "alignItems": "center",
          "paddingHorizontal": 20,
          "paddingVertical": 8,
        },
        {
          "flex": 1,
        },
      ]
    }
    data={
      [
        {
          "label": "1",
          "value": 1,
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={[]}
    style={
      [
        {
          "maxWidth": "100%",
        },
        {
          "flex": 2,
        },
      ]
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          accessibilityLabel="tab"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "backgroundColor": "#000",
              "borderRadius": 8,
              "marginRight": 8,
              "opacity": 1,
              "paddingHorizontal": 12,
              "paddingVertical": 6,
            }
          }
        >
          <Text
            allowFontScaling={true}
            style={
              [
                {
                  "color": "#F54C3D",
                  "fontFamily": "Inter-Regular",
                  "fontSize": 28,
                  "lineHeight": 32,
                  "minHeight": 32,
                },
                undefined,
              ]
            }
          >
            1
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
