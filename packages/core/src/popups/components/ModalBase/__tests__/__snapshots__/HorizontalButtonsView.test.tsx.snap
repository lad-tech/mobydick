// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@lad-tech/mobydick-core/modalBase should renders correctly HorizontalButtonsView destructive 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "paddingTop": 20,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#F54C3D",
        "borderRadius": 12,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 6,
        "minHeight": 48,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        [
          {
            "color": "#FFFFFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 18,
            "lineHeight": 22,
            "minHeight": 22,
          },
          [
            {
              "paddingHorizontal": 6,
            },
            undefined,
          ],
        ]
      }
    >
      textLeft
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#F54C3D",
        "borderRadius": 12,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginLeft": 6,
        "minHeight": 48,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        [
          {
            "color": "#FFFFFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 18,
            "lineHeight": 22,
            "minHeight": 22,
          },
          [
            {
              "paddingHorizontal": 6,
            },
            undefined,
          ],
        ]
      }
    >
      textRight
    </Text>
  </View>
</View>
`;

exports[`@lad-tech/mobydick-core/modalBase should renders correctly HorizontalButtonsView primary 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "paddingTop": 20,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#2B78EE",
        "borderRadius": 12,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 6,
        "minHeight": 48,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        [
          {
            "color": "#FFFFFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 18,
            "lineHeight": 22,
            "minHeight": 22,
          },
          [
            {
              "paddingHorizontal": 6,
            },
            undefined,
          ],
        ]
      }
    >
      textLeft
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#2B78EE",
        "borderRadius": 12,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginLeft": 6,
        "minHeight": 48,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        [
          {
            "color": "#FFFFFF",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 18,
            "lineHeight": 22,
            "minHeight": 22,
          },
          [
            {
              "paddingHorizontal": 6,
            },
            undefined,
          ],
        ]
      }
    >
      textRight
    </Text>
  </View>
</View>
`;

exports[`@lad-tech/mobydick-core/modalBase should renders correctly HorizontalButtonsView secondary 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "paddingTop": 20,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#F2F4F7",
        "borderRadius": 12,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 6,
        "minHeight": 48,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        [
          {
            "color": "#2B78EE",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 18,
            "lineHeight": 22,
            "minHeight": 22,
          },
          [
            {
              "paddingHorizontal": 6,
            },
            undefined,
          ],
        ]
      }
    >
      textLeft
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#F2F4F7",
        "borderRadius": 12,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginLeft": 6,
        "minHeight": 48,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        [
          {
            "color": "#2B78EE",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 18,
            "lineHeight": 22,
            "minHeight": 22,
          },
          [
            {
              "paddingHorizontal": 6,
            },
            undefined,
          ],
        ]
      }
    >
      textRight
    </Text>
  </View>
</View>
`;

exports[`@lad-tech/mobydick-core/modalBase should renders correctly HorizontalButtonsView tertiary 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "paddingTop": 20,
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "transparent",
        "borderRadius": 12,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginRight": 6,
        "minHeight": 48,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        [
          {
            "color": "#2B78EE",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 18,
            "lineHeight": 22,
            "minHeight": 22,
          },
          [
            {
              "paddingHorizontal": 6,
            },
            undefined,
          ],
        ]
      }
    >
      textLeft
    </Text>
  </View>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": false,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "transparent",
        "borderRadius": 12,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "marginLeft": 6,
        "minHeight": 48,
        "opacity": 1,
      }
    }
  >
    <Text
      allowFontScaling={true}
      style={
        [
          {
            "color": "#2B78EE",
            "fontFamily": "Inter-SemiBold",
            "fontSize": 18,
            "lineHeight": 22,
            "minHeight": 22,
          },
          [
            {
              "paddingHorizontal": 6,
            },
            undefined,
          ],
        ]
      }
    >
      textRight
    </Text>
  </View>
</View>
`;
